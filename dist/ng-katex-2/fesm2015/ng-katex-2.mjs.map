{"version":3,"file":"ng-katex-2.mjs","sources":["../../../projects/ng-katex-2/src/lib/ng-katex.service.ts","../../../projects/ng-katex-2/src/lib/ng-katex.directive.ts","../../../projects/ng-katex-2/src/lib/ng-katex.component.ts","../../../projects/ng-katex-2/src/lib/ng-katex-paragraph.component.ts","../../../projects/ng-katex-2/src/lib/ng-katex-html.component.ts","../../../projects/ng-katex-2/src/lib/ng-katex.module.ts","../../../projects/ng-katex-2/src/public-api.ts","../../../projects/ng-katex-2/src/ng-katex-2.ts"],"sourcesContent":["import { ElementRef, Injectable } from '@angular/core';\r\nimport { render, renderToString, KatexOptions } from 'katex';\r\n\r\n@Injectable()\r\nexport class KatexService {\r\n\r\n  render(equation: string, element: ElementRef, options?: KatexOptions) {\r\n    return render(equation, element.nativeElement, options);\r\n  }\r\n\r\n  renderToString(equation: string, options?: KatexOptions): string {\r\n    return renderToString(equation, options);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { KatexService } from './ng-katex.service';\r\nimport { KatexOptions } from 'katex';\r\n\r\n@Directive({\r\n  selector: '[katex]',\r\n  standalone: true,\r\n})\r\nexport class KatexDirective {\r\n\r\n  @Input('katex') equation!: string;\r\n  @Input('katex-options') options!: KatexOptions;\r\n\r\n  @Output() onError = new EventEmitter<any>();\r\n\r\n  constructor(private el: ElementRef,\r\n    private katexService: KatexService) { }\r\n\r\n  ngOnChanges() {\r\n    try {\r\n      this.katexService.render(this.equation, this.el, this.options);\r\n    } catch (e) {\r\n      this.onError.emit(e);\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { KatexOptions } from 'katex';\r\nimport { KatexDirective } from './ng-katex.directive';\r\n\r\n@Component({\r\n  selector: 'ng-katex',\r\n  template: `\r\n    <span [katex]=\"equation\"\r\n          [katex-options]=\"options\"\r\n          (someEvent)=\"hasError($event)\">\r\n    </span>\r\n  `,\r\n  standalone: true,\r\n  imports: [KatexDirective],\r\n})\r\nexport class KatexComponent {\r\n\r\n  @Input() equation!: string;\r\n  @Input() options!: KatexOptions;\r\n  @Output() onError = new EventEmitter<any>();\r\n\r\n  hasError(error: any) {\r\n    this.onError.emit(error);\r\n  }\r\n}\r\n","import { NgFor, NgIf } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { extractMath, Segment } from 'extract-math';\r\nimport { KatexComponent } from './ng-katex.component';\r\n\r\n@Component({\r\n  selector: 'ng-katex-paragraph',\r\n  template: `\r\n    <p>\r\n      <ng-container *ngFor=\"let segment of segments\">\r\n        <ng-katex\r\n          *ngIf=\"segment.math else text\"\r\n          [equation]=\"segment.raw\"\r\n          [options]=\"{ displayMode: segment.type === 'display' }\">\r\n        </ng-katex>\r\n        <ng-template #text>{{ segment.value }}</ng-template>\r\n      </ng-container>\r\n    </p>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [NgIf, NgFor, KatexComponent],\r\n  standalone: true,\r\n})\r\nexport class KatexParagraphComponent {\r\n\r\n  segments: Segment[] = [];\r\n\r\n  private _paragraph!: string;\r\n\r\n  @Input() set paragraph(paragraph: string) {\r\n\r\n    if (paragraph !== this._paragraph) {\r\n      this._paragraph = paragraph;\r\n      this.segments = extractMath(this._paragraph);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { extractMath, Segment } from 'extract-math';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { KatexService } from './ng-katex.service';\r\n\r\n@Component({\r\n  selector: 'ng-katex-html',\r\n  template: `<span [innerHTML]=\"allHtml\"></span>`,\r\n  standalone: true,\r\n})\r\nexport class KatexHtmlComponent {\r\n  constructor(private domSanitizer: DomSanitizer, private katexService: KatexService) { }\r\n\r\n  allHtml!: SafeHtml;\r\n\r\n  _html!: string;\r\n\r\n  private _segments: Segment[] = [];\r\n\r\n  @Input() set html(html: string) {\r\n\r\n    if (html !== this._html) {\r\n      this._html = html;\r\n      this.updateAllHtml();\r\n    }\r\n  }\r\n\r\n  private updateAllHtml() {\r\n\r\n    if (!this._html) {\r\n      this.allHtml = '';\r\n      this._segments = [];\r\n      return;\r\n    }\r\n\r\n    this._segments = extractMath(this._html);\r\n\r\n    const allHtml = this._segments.map((seg) => {\r\n      if (seg.math) {\r\n        return this.katexService.renderToString(seg.raw, { displayMode: seg.type === 'display' });\r\n      }\r\n      else {\r\n        return seg.value;\r\n      }\r\n    }).reduce((total, current) => {\r\n      return total += current;\r\n    });\r\n    this.allHtml = this.domSanitizer.bypassSecurityTrustHtml(allHtml);\r\n  }\r\n\r\n  get segments(): Segment[] {\r\n    return this._segments;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { KatexService } from './ng-katex.service';\r\nimport { KatexDirective } from './ng-katex.directive';\r\nimport { KatexComponent } from './ng-katex.component';\r\nimport { KatexParagraphComponent } from './ng-katex-paragraph.component';\r\nimport { KatexHtmlComponent } from './ng-katex-html.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    KatexDirective,\r\n    KatexComponent,\r\n    KatexParagraphComponent,\r\n    KatexHtmlComponent,\r\n  ],\r\n  providers: [\r\n    KatexService,\r\n  ],\r\n  declarations: [\r\n  ],\r\n  exports: [\r\n    KatexDirective,\r\n    KatexComponent,\r\n    KatexParagraphComponent,\r\n    KatexHtmlComponent,\r\n  ],\r\n})\r\nexport class KatexModule { }\r\n","/*\n * Public API Surface of ng-katex\n */\nexport * from './lib/ng-katex.component';\nexport * from './lib/ng-katex-paragraph.component';\nexport * from './lib/ng-katex.module';\nexport * from './lib/ng-katex.service';\nexport * from './lib/ng-katex.directive';\nexport * from './lib/ng-katex-html.component';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.KatexService","i2.KatexService"],"mappings":"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"}